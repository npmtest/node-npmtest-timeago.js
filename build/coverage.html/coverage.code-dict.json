{"/home/travis/build/npmtest/node-npmtest-timeago.js/test.js":"/* istanbul instrument in package npmtest_timeago_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-timeago.js/lib.npmtest_timeago.js.js":"/* istanbul instrument in package npmtest_timeago_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_timeago_js = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_timeago_js = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-timeago.js/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-timeago.js && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_timeago_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_timeago_js\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_timeago_js.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_timeago_js.rollup.js'] =\n            local.assetsDict['/assets.npmtest_timeago_js.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_timeago_js.__dirname + '/lib.npmtest_timeago_js.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/dist/timeago.min.js":"!function(t,e){\"object\"==typeof module&&module.exports?(module.exports=e(),module.exports.default=module.exports):t.timeago=e()}(\"undefined\"!=typeof window?window:this,function(){function t(t){return t instanceof Date?t:isNaN(t)?/^\\d+$/.test(t)?new Date(e(t)):(t=(t||\"\").trim().replace(/\\.\\d+/,\"\").replace(/-/,\"/\").replace(/-/,\"/\").replace(/(\\d)T(\\d)/,\"$1 $2\").replace(/Z/,\" UTC\").replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/,\" $1$2\"),new Date(t)):new Date(e(t))}function e(t){return parseInt(t)}function n(t,n,r){n=p[n]?n:p[r]?r:\"en\";for(var o=0,i=t<0?1:0,a=t=Math.abs(t);t>=h[o]&&o<m;o++)t/=h[o];return t=e(t),o*=2,t>(0===o?9:1)&&(o+=1),p[n](t,o,a)[i].replace(\"%s\",t)}function r(e,n){return((n=n?t(n):new Date)-t(e))/1e3}function o(t){for(var e=1,n=0,r=Math.abs(t);t>=h[n]&&n<m;n++)t/=h[n],e*=h[n];return r%=e,r=r?e-r:e,Math.ceil(r)}function i(t){return t.dataset.timeago?t.dataset.timeago:a(t,w)}function a(t,e){return t.getAttribute?t.getAttribute(e):t.attr?t.attr(e):void 0}function u(t,e){return t.setAttribute?t.setAttribute(_,e):t.attr?t.attr(_,e):void 0}function c(t){return a(t,_)}function d(t,e){this.nowDate=t,this.defaultLocale=e||\"en\"}function f(t,e){return new d(t,e)}var s=\"second_minute_hour_day_week_month_year\".split(\"_\"),l=\"秒_分钟_小时_天_周_月_年\".split(\"_\"),p={en:function(t,e){if(0===e)return[\"just now\",\"right now\"];var n=s[parseInt(e/2)];return t>1&&(n+=\"s\"),[t+\" \"+n+\" ago\",\"in \"+t+\" \"+n]},zh_CN:function(t,e){if(0===e)return[\"刚刚\",\"片刻后\"];var n=l[parseInt(e/2)];return[t+n+\"前\",t+n+\"后\"]}},h=[60,60,24,7,365/7/12,12],m=6,w=\"datetime\",_=\"data-tid\",v={};return d.prototype.doRender=function(t,e,i){var a,c=r(e,this.nowDate),d=this;t.innerHTML=n(c,i,this.defaultLocale),v[a=setTimeout(function(){d.doRender(t,e,i),delete v[a]},Math.min(1e3*o(c),2147483647))]=0,u(t,a)},d.prototype.format=function(t,e){return n(r(t,this.nowDate),e,this.defaultLocale)},d.prototype.render=function(t,e){void 0===t.length&&(t=[t]);for(var n=0,r=t.length;n<r;n++)this.doRender(t[n],i(t[n]),e)},d.prototype.setLocale=function(t){this.defaultLocale=t},f.register=function(t,e){p[t]=e},f.cancel=function(t){var e;if(t)(e=c(t))&&(clearTimeout(e),delete v[e]);else{for(e in v)clearTimeout(e);v={}}},f});","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/gulpfile.js":"const gulp = require('gulp');\r\nconst uglify = require('gulp-uglify');\r\nconst rename = require('gulp-rename');\r\nconst injectVersion = require('gulp-inject-version');\r\n\r\ngulp.task('mini', () => (\r\n  gulp.src('src/timeago.js')\r\n  .pipe(injectVersion())\r\n  .pipe(gulp.dest('dist/'))\r\n  .pipe(uglify())    //uglify\r\n  .pipe(rename('timeago.min.js'))\r\n  .pipe(gulp.dest('dist/'))\r\n));\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/webpack.config.js":"var webpack = require('webpack');\r\nvar uglifyJsPlugin = new webpack.optimize.UglifyJsPlugin({\r\n  output: {comments: false},\r\n  compress: {warnings: false}\r\n});\r\n\r\nmodule.exports = {\r\n  entry: './src/timeago.locales.js',\r\n  output: {filename: './dist/timeago.locales.min.js'},\r\n  plugins: [uglifyJsPlugin]\r\n};","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/demo/index.js":"function iso8601(date) {\r\n  return date.getUTCFullYear()\r\n    + \"-\" + (date.getUTCMonth()+1)\r\n    + \"-\" + date.getUTCDate()\r\n    + \"T\" + date.getUTCHours()\r\n    + \":\" + date.getUTCMinutes()\r\n    + \":\" + date.getUTCSeconds() + \"Z\";\r\n}\r\n\r\ndocument.querySelector('.load_time').setAttribute('datetime', iso8601(new Date()));\r\nvar timeagoInstance = new timeago(null, navigator.language.replace('-', '_'));\r\ntimeagoInstance.render(document.querySelectorAll('.need_to_be_rendered'));\r\n\r\n// 2. demo\r\ndocument.getElementById('demo_now').innerHTML = new timeago().format(new Date());\r\ndocument.getElementById('demo_20160907').innerHTML = new timeago(null, 'zh_CN').format('2016-09-07');\r\ndocument.getElementById('demo_timestamp').innerHTML = new timeago().format(1473245023718); ","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ar.js":"module.exports = function(number, index) {\r\n    if (index === 0) {\r\n        return [ 'منذ لحظات', 'بعد لحظات' ];\r\n    }\r\n\r\n    var timeStr = formatTime(Math.floor(index/2), number);\r\n    return ['منذ' + ' ' + timeStr, 'بعد' + ' ' + timeStr];\r\n}\r\n\r\nvar timeTypes = [\r\n    [ 'ثانية', 'ثانيتين', '%s ثوان', '%s ثانية' ],    // Seconds\r\n    [ 'دقيقة', 'دقيقتين', '%s دقائق', '%s دقيقة' ],   // Minutes\r\n    [ 'ساعة', 'ساعتين', '%s ساعات', '%s ساعة' ],      // Hours\r\n    [ 'يوم', 'يومين', '%s أيام', '%s يوماً' ],         // Days\r\n    [ 'أسبوع', 'أسبوعين', '%s أسابيع', '%s أسبوعاً' ], // Weeks\r\n    [ 'شهر', 'شهرين', '%s أشهر', '%s شهراً' ],         // Months\r\n    [ 'عام', 'عامين', '%s أعوام', '%s عاماً' ]         // Years\r\n];\r\n\r\nfunction formatTime(type, n) {\r\n    if (n < 3)\r\n        return timeTypes[type][n-1];\r\n    else if (n >= 3 && n <= 10)\r\n        return timeTypes[type][2];\r\n    else\r\n        return timeTypes[type][3];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/be.js":"var seconds = formatNum.bind(null, 'секунду', '%s секунду', '%s секунды', '%s секунд'),\r\n  minutes = formatNum.bind(null, 'хвіліну', '%s хвіліну', '%s хвіліны', '%s хвілін'),\r\n  hours = formatNum.bind(null, 'гадзіну', '%s гадзіну', '%s гадзіны', '%s гадзін'),\r\n  days = formatNum.bind(null, 'дзень', '%s дзень', '%s дні', '%s дзён'),\r\n  weeks = formatNum.bind(null, 'тыдзень', '%s тыдзень', '%s тыдні', '%s тыдняў'),\r\n  months = formatNum.bind(null, 'месяц', '%s месяц', '%s месяцы', '%s месяцаў'),\r\n  years = formatNum.bind(null, 'год', '%s год', '%s гады', '%s гадоў');\r\n\r\nmodule.exports = function(number, index) {\r\n  switch(index) {\r\n    case 0: return ['толькі што', 'праз некалькі секунд'];\r\n    case 1: return [seconds(number) + ' таму', 'праз ' + seconds(number)];\r\n    case 2:\r\n    case 3: return [minutes(number) + ' таму', 'праз ' + minutes(number)];\r\n    case 4:\r\n    case 5: return [hours(number) + ' таму', 'праз ' + hours(number)];\r\n    case 6: \r\n    case 7: return [days(number) + ' таму', 'праз ' + days(number)];\r\n    case 8:\r\n    case 9: return [weeks(number) + ' таму', 'праз ' + weeks(number)];\r\n    case 10:\r\n    case 11: return [months(number) + ' таму', 'праз ' + months(number)];\r\n    case 12:\r\n    case 13: return [years(number) + ' таму', 'праз ' + years(number)];\r\n    default: return ['', '']\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param f1 - 1\r\n * @param f - 21, 31, ...\r\n * @param s - 2-4, 22-24, 32-34 ...\r\n * @param t - 5-20, 25-30, ...\r\n * @param n\r\n * @returns {string}\r\n */\r\nfunction formatNum(f1, f, s, t, n) {\r\n  var n10 = n % 10,\r\n    str = t;\r\n\r\n  if (n === 1) {\r\n    str = f1;\r\n  } else if (n10 === 1 && n > 20) {\r\n    str = f;\r\n  } else if (n10 > 1 && n10 < 5 && (n > 20 || n < 10)) {\r\n    str = s;\r\n  }\r\n\r\n  return str;\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/bg.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['току що', 'съвсем скоро'],\r\n    ['преди %s секунди', 'след %s секунди'],\r\n    ['преди 1 минута', 'след 1 минута'],\r\n    ['преди %s минути', 'след %s минути'],\r\n    ['преди 1 час', 'след 1 час'],\r\n    ['преди %s часа', 'след %s часа'],\r\n    ['преди 1 ден', 'след 1 ден'],\r\n    ['преди %s дни', 'след %s дни'],\r\n    ['преди 1 седмица', 'след 1 седмица'],\r\n    ['преди %s седмици', 'след %s седмици'],\r\n    ['преди 1 месец', 'след 1 месец'],\r\n    ['преди %s месеца', 'след %s месеца'],\r\n    ['преди 1 година', 'след 1 година'],\r\n    ['преди %s години', 'след %s години']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ca.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['fa un moment', 'd\\'aquí un moment'],\r\n    ['fa %s segons', 'd\\'aquí %s segons'],\r\n    ['fa 1 minut', 'd\\'aquí 1 minut'],\r\n    ['fa %s minuts', 'd\\'aquí %s minuts'],\r\n    ['fa 1 hora', 'd\\'aquí 1 hora'],\r\n    ['fa %s hores', 'd\\'aquí %s hores'],\r\n    ['fa 1 dia', 'd\\'aquí 1 dia'],\r\n    ['fa %s dies', 'd\\'aquí %s dies'],\r\n    ['fa 1 setmana', 'd\\'aquí 1 setmana'],\r\n    ['fa %s setmanes', 'd\\'aquí %s setmanes'],\r\n    ['fa 1 mes', 'd\\'aquí 1 mes'],\r\n    ['fa %s mesos', 'd\\'aquí %s mesos'],\r\n    ['fa 1 any', 'd\\'aquí 1 any'],\r\n    ['fa %s anys', 'd\\'aquí %s anys']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/da.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['for et øjeblik siden', 'om et øjeblik'],\r\n    ['for %s sekunder siden', 'om %s sekunder'],\r\n    ['for 1 minut siden', 'om 1 minut'],\r\n    ['for %s minutter siden', 'om %s minutter'],\r\n    ['for 1 time siden', 'om 1 time'],\r\n    ['for %s timer siden', 'om %s timer'],\r\n    ['for 1 dag siden', 'om 1 dag'],\r\n    ['for %s dage siden', 'om %s dage'],\r\n    ['for 1 uge siden', 'om 1 uge'],\r\n    ['for %s uger siden', 'om %s uger'],\r\n    ['for 1 måned siden', 'om 1 måned'],\r\n    ['for %s måneder siden', 'om %s måneder'],\r\n    ['for 1 år siden', 'om 1 år'],\r\n    ['for %s år siden', 'om %s år']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/de.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['gerade eben', 'vor einer Weile'],\r\n    ['vor %s Sekunden', 'in %s Sekunden'],\r\n    ['vor 1 Minute', 'in 1 Minute'],\r\n    ['vor %s Minuten', 'in %s Minuten'],\r\n    ['vor 1 Stunde', 'in 1 Stunde'],\r\n    ['vor %s Stunden', 'in %s Stunden'],\r\n    ['vor 1 Tag', 'in 1 Tag'],\r\n    ['vor %s Tagen', 'in %s Tagen'],\r\n    ['vor 1 Woche', 'in 1 Woche'],\r\n    ['vor %s Wochen', 'in %s Wochen'],\r\n    ['vor 1 Monat', 'in 1 Monat'],\r\n    ['vor %s Monaten', 'in %s Monaten'],\r\n    ['vor 1 Jahr', 'in 1 Jahr'],\r\n    ['vor %s Jahren', 'in %s Jahren']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/el.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['μόλις τώρα', 'σε λίγο'],\r\n    ['%s δευτερόλεπτα πριν', 'σε %s δευτερόλεπτα'],\r\n    ['1 λεπτό πριν', 'σε 1 λεπτό'],\r\n    ['%s λεπτά πριν', 'σε %s λεπτά'],\r\n    ['1 ώρα πριν', 'σε 1 ώρα'],\r\n    ['%s ώρες πριν', 'σε %s ώρες'],\r\n    ['1 μέρα πριν', 'σε 1 μέρα'],\r\n    ['%s μέρες πριν', 'σε %s μέρες'],\r\n    ['1 εβδομάδα πριν', 'σε 1 εβδομάδα'],\r\n    ['%s εβδομάδες πριν', 'σε %s εβδομάδες'],\r\n    ['1 μήνα πριν', 'σε 1 μήνα'],\r\n    ['%s μήνες πριν', 'σε %s μήνες'],\r\n    ['1 χρόνο πριν', 'σε 1 χρόνο'],\r\n    ['%s χρόνια πριν', 'σε %s χρόνια']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/en.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['just now', 'right now'],\r\n    ['%s seconds ago', 'in %s seconds'],\r\n    ['1 minute ago', 'in 1 minute'],\r\n    ['%s minutes ago', 'in %s minutes'],\r\n    ['1 hour ago', 'in 1 hour'],\r\n    ['%s hours ago', 'in %s hours'],\r\n    ['1 day ago', 'in 1 day'],\r\n    ['%s days ago', 'in %s days'],\r\n    ['1 week ago', 'in 1 week'],\r\n    ['%s weeks ago', 'in %s weeks'],\r\n    ['1 month ago', 'in 1 month'],\r\n    ['%s months ago', 'in %s months'],\r\n    ['1 year ago', 'in 1 year'],\r\n    ['%s years ago', 'in %s years']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/en_short.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['just now', 'right now'],\r\n    ['%ss ago', 'in %ss'],\r\n    ['1m ago', 'in 1m'],\r\n    ['%sm ago', 'in %sm'],\r\n    ['1h ago', 'in 1h'],\r\n    ['%sh ago', 'in %sh'],\r\n    ['1d ago', 'in 1d'],\r\n    ['%sd ago', 'in %sd'],\r\n    ['1w ago', 'in 1w'],\r\n    ['%sw ago', 'in %sw'],\r\n    ['1mo ago', 'in 1mo'],\r\n    ['%smo ago', 'in %smo'],\r\n    ['1yr ago', 'in 1yr'],\r\n    ['%syr ago', 'in %syr']\r\n  ][index];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/es.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['justo ahora', 'en un rato'],\r\n    ['hace %s segundos', 'en %s segundos'],\r\n    ['hace 1 minuto', 'en 1 minuto'],\r\n    ['hace %s minutos', 'en %s minutos'],\r\n    ['hace 1 hora', 'en 1 hora'],\r\n    ['hace %s horas', 'en %s horas'],\r\n    ['hace 1 día', 'en 1 día'],\r\n    ['hace %s días', 'en %s días'],\r\n    ['hace 1 semana', 'en 1 semana'],\r\n    ['hace %s semanas', 'en %s semanas'],\r\n    ['hace 1 mes', 'en 1 mes'],\r\n    ['hace %s meses', 'en %s meses'],\r\n    ['hace 1 año', 'en 1 año'],\r\n    ['hace %s años', 'en %s años']\r\n  ][index];\r\n};","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/eu.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['orain', 'denbora bat barru'],\r\n    ['duela %s segundu', '%s segundu barru'],\r\n    ['duela minutu 1', 'minutu 1 barru'],\r\n    ['duela %s minutu', '%s minutu barru'],\r\n    ['duela ordu 1', 'ordu 1 barru'],\r\n    ['duela %s ordu', '%s ordu barru'],\r\n    ['duela egun 1', 'egun 1 barru'],\r\n    ['duela %s egun', '%s egun barru'],\r\n    ['duela aste 1', 'aste 1 barru'],\r\n    ['duela %s aste', '%s aste barru'],\r\n    ['duela hillabete 1', 'hillabete 1 barru'],\r\n    ['duela %s hillabete', '%s hillabete barru'],\r\n    ['duela urte 1', 'urte 1 barru'],\r\n    ['duela %s urte', '%s urte barru']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/fi.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['juuri äsken', 'juuri nyt'],\r\n    ['%s sekuntia sitten', '%s sekunnin päästä'],\r\n    ['minuutti sitten', 'minuutin päästä'],\r\n    ['%s minuuttia sitten', '%s minuutin päästä'],\r\n    ['tunti sitten', 'tunnin päästä'],\r\n    ['%s tuntia sitten', '%s tunnin päästä'],\r\n    ['päivä sitten', 'päivän päästä'],\r\n    ['%s päivää sitten', '%s päivän päästä'],\r\n    ['viikko sitten', 'viikon päästä'],\r\n    ['%s viikkoa sitten', '%s viikon päästä'],\r\n    ['kuukausi sitten', 'kuukauden päästä'],\r\n    ['%s kuukautta sitten', '%s kuukauden päästä'],\r\n    ['vuosi sitten', 'vuoden päästä'],\r\n    ['%s vuotta sitten', '%s vuoden päästä']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/fr.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['à l\\'instant', 'dans un instant'],\r\n    ['il y a %s secondes', 'dans %s secondes'],\r\n    ['il y a 1 minute', 'dans 1 minute'],\r\n    ['il y a %s minutes', 'dans %s minutes'],\r\n    ['il y a 1 heure', 'dans 1 heure'],\r\n    ['il y a %s heures', 'dans %s heures'],\r\n    ['il y a 1 jour', 'dans 1 jour'],\r\n    ['il y a %s jours', 'dans %s jours'],\r\n    ['il y a 1 semaine', 'dans 1 semaine'],\r\n    ['il y a %s semaines', 'dans %s semaines'],\r\n    ['il y a 1 mois', 'dans 1 mois'],\r\n    ['il y a %s mois', 'dans %s mois'],\r\n    ['il y a 1 an', 'dans 1 an'],\r\n    ['il y a %s ans', 'dans %s ans']\r\n  ][index];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/he.js":"module.exports = function(number, index) {\r\n    return [\r\n        ['זה עתה', 'עכשיו'],\r\n        ['לפני %s שניות', 'בעוד %s שניות'],\r\n        ['לפני דקה', 'בעוד דקה'],\r\n        ['לפני %s דקות', 'בעוד %s דקות'],\r\n        ['לפני שעה', 'בעוד שעה'],\r\n        ['לפני %s שעות', 'בעוד %s שעות'],\r\n        ['אתמול', 'מחר'],\r\n        ['לפני %s ימים', 'בעוד %s ימים'],\r\n        ['לפני שבוע', 'בעוד שבוע'],\r\n        ['לפני %s שבועות', 'בעוד %s שבועות'],\r\n        ['לפני חודש', 'בעוד חודש'],\r\n        ['לפני %s חודשים', 'בעוד %s חודשים'],\r\n        ['לפני שנה', 'בעוד שנה'],\r\n        ['לפני %s שנים', 'בעוד %s שנים']\r\n    ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/hu.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['éppen most', 'éppen most'],\r\n    ['%s másodperce', '%s másodpercen belül'],\r\n    ['1 perce', '1 percen belül'],\r\n    ['%s perce', '%s percen belül'],\r\n    ['1 órája', '1 órán belül'],\r\n    ['%s órája', '%s órán belül'],\r\n    ['1 napja', '1 napon belül'],\r\n    ['%s napja', '%s napon belül'],\r\n    ['1 hete', '1 héten belül'],\r\n    ['%s hete', '%s héten belül'],\r\n    ['1 hónapja', '1 hónapon belül'],\r\n    ['%s hónapja', '%s hónapon belül'],\r\n    ['1 éve', '1 éven belül'],\r\n    ['%s éve', '%s éven belül']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/in_BG.js":"module.exports = function(number, index) {\r\n  return [  \r\n  [ 'এইমাত্র' , 'একটা সময়'] ,\r\n  [ '%s সেকেন্ড আগে', '%s এর সেকেন্ডের মধ্যে'] ,\r\n  [ '1 মিনিট আগে', '1 মিনিটে'] ,\r\n  [ '%s এর মিনিট আগে', '%s এর মিনিটের মধ্যে'] ,\r\n  [ '1 ঘন্টা আগে', '1 ঘন্টা'] ,\r\n  [ '%s ঘণ্টা আগে', '%s এর ঘন্টার মধ্যে'] ,\r\n  [ '1 দিন আগে', '1 দিনের মধ্যে'] ,\r\n  [ '%s এর দিন আগে', '%s এর দিন'] ,\r\n  [ '1 সপ্তাহ আগে', '1 সপ্তাহের মধ্যে'] ,\r\n  [ '%s এর সপ্তাহ আগে', '%s সপ্তাহের মধ্যে'] ,\r\n  [ '1 মাস আগে', '1 মাসে'] ,\r\n  [ '%s মাস আগে', '%s মাসে'] ,\r\n  [ '1 বছর আগে', '1 বছরের মধ্যে'] ,\r\n  [ '%s বছর আগে', '%s বছরে']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/in_HI.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['अभी', 'कुछ समय'],\r\n    ['%s सेकंड पहले', '%s सेकंड में'],\r\n    ['1 मिनट पहले', '1 मिनट में'],\r\n    ['%s मिनट पहले', '%s मिनट में'] ,\r\n    ['1 घंटे पहले', '1 घंटे में'] ,\r\n    ['%s घंटे पहले', '%s घंटे में'] ,\r\n    ['1 दिन पहले', '1 दिन में'] ,\r\n    ['%s दिन पहले', '%s दिनों में'] ,\r\n    ['1 सप्ताह पहले', '1 सप्ताह में'] ,\r\n    ['%s हफ्ते पहले', '%s हफ्तों में'] ,\r\n    ['1 महीने पहले', '1 महीने में'] ,\r\n    ['%s महीने पहले', '%s महीनों में'] ,\r\n    ['1 साल पहले', '1 साल में'] ,\r\n    ['%s साल पहले','%s साल में']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/in_ID.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['baru saja', 'sebentar'],\r\n    ['%s detik yang lalu', 'dalam %s detik'],\r\n    ['1 menit yang lalu', 'dalam 1 menit'],\r\n    ['%s menit yang lalu', 'dalam %s menit'],\r\n    ['1 jam yang lalu', 'dalam 1 jam'],\r\n    ['%s jam yang lalu', 'dalam %s jam'],\r\n    ['1 hari yang lalu', 'dalam 1 hari'],\r\n    ['%s hari yang lalu', 'dalam %s hari'],\r\n    ['1 minggu yang lalu', 'dalam 1 minggu'],\r\n    ['%s minggu yang lalu', 'dalam %s minggu'],\r\n    ['1 bulan yang lalu', 'dalam 1 bulan'],\r\n    ['%s bulan yang lalu', 'dalam %s bulan'],\r\n    ['1 tahun yang lalu', 'dalam 1 tahun'],\r\n    ['%s tahun yang lalu', 'dalam %s tahun']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/it.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['poco fa', 'tra poco'],\r\n    ['%s secondi fa', '%s secondi da ora'],\r\n    ['un minuto fa', 'un minuto da ora'],\r\n    ['%s minuti fa', '%s minuti da ora'],\r\n    ['un\\'ora fa', 'un\\'ora da ora'],\r\n    ['%s ore fa', '%s ore da ora'],\r\n    ['un giorno fa', 'un giorno da ora'],\r\n    ['%s giorni fa', '%s giorni da ora'],\r\n    ['una settimana fa', 'una settimana da ora'],\r\n    ['%s settimane fa', '%s settimane da ora'],\r\n    ['un mese fa', 'un mese da ora'],\r\n    ['%s mesi fa', '%s mesi da ora'],\r\n    ['un anno fa', 'un anno da ora'],\r\n    ['%s anni fa', '%s anni da ora']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ja.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['すこし前', 'すぐに'],\r\n    ['%s秒前', '%s秒以内'],\r\n    ['1分前', '1分以内'],\r\n    ['%s分前', '%s分以内'],\r\n    ['1時間前', '1時間以内'],\r\n    ['%s時間前', '%s時間以内'],\r\n    ['1日前', '1日以内'],\r\n    ['%s日前', '%s日以内'],\r\n    ['1週間前', '1週間以内'],\r\n    ['%s週間前', '%s週間以内'],\r\n    ['1ヶ月前', '1ヶ月以内'],\r\n    ['%sヶ月前', '%sヶ月以内'],\r\n    ['1年前', '1年以内'],\r\n    ['%s年前', '%s年以内']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ko.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['방금', '곧'],\r\n    ['%s초 전', '%s초 후'],\r\n    ['1분 전', '1분 후'],\r\n    ['%s분 전', '%s분 후'],\r\n    ['1시간 전', '1시간 후'],\r\n    ['%s시간 전', '%s시간 후'],\r\n    ['1일 전', '1일 후'],\r\n    ['%s일 전', '%s일 후'],\r\n    ['1주일 전', '1주일 후'],\r\n    ['%s주일 전', '%s주일 후'],\r\n    ['1개월 전', '1개월 후'],\r\n    ['%s개월 전', '%s개월 후'],\r\n    ['1년 전', '1년 후'],\r\n    ['%s년 전', '%s년 후']\r\n  ][index];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/locales.js":"/** locales table.\r\n * You can add the missing locale code\r\n * 1. please sort by dictionary.\r\n * 2. please ensure the accuracy.\r\n */\r\nmodule.exports = [ 'ar', 'be', 'bg', 'ca', 'da', 'de', 'el', 'en', 'en_short', 'es', 'eu', 'fi', 'fr', 'he', 'hu', 'in_BG', 'in_HI', 'in_ID', 'it', 'ja', 'ko', 'ml', 'nb_NO', 'nl', 'nn_NO', 'pl', 'pt_BR', 'ro', 'ru', 'sv', 'ta', 'th', 'tr', 'uk', 'vi', 'zh_CN', 'zh_TW' ];\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ml.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['ഇപ്പോള്‍', 'കുറച്ചു മുന്‍പ്'],\r\n    ['%s സെക്കന്റ്‌കള്‍ക്ക് മുന്‍പ്', '%s സെക്കന്റില്‍'],\r\n    ['1 മിനിറ്റിനു മുന്‍പ്', '1 മിനിറ്റില്‍'],\r\n    ['%s മിനിറ്റുകള്‍ക്ക് മുന്‍പ', '%s മിനിറ്റില്‍'],\r\n    ['1 മണിക്കൂറിനു മുന്‍പ്', '1 മണിക്കൂറില്‍'],\r\n    ['%s മണിക്കൂറുകള്‍ക്കു മുന്‍പ്', '%s മണിക്കൂറില്‍'],\r\n    ['1 ഒരു ദിവസം മുന്‍പ്', '1 ദിവസത്തില്‍'],\r\n    ['%s ദിവസങ്ങള്‍ക് മുന്‍പ്', '%s ദിവസങ്ങള്‍ക്കുള്ളില്‍'],\r\n    ['1 ആഴ്ച മുന്‍പ്', '1 ആഴ്ചയില്‍'],\r\n    ['%s ആഴ്ചകള്‍ക്ക് മുന്‍പ്', '%s ആഴ്ചകള്‍ക്കുള്ളില്‍'],\r\n    ['1 മാസത്തിനു മുന്‍പ്', '1 മാസത്തിനുള്ളില്‍'],\r\n    ['%s മാസങ്ങള്‍ക്ക് മുന്‍പ്', '%s മാസങ്ങള്‍ക്കുള്ളില്‍'],\r\n    ['1 വര്‍ഷത്തിനു  മുന്‍പ്', '1 വര്‍ഷത്തിനുള്ളില്‍'],\r\n    ['%s വര്‍ഷങ്ങള്‍ക്കു മുന്‍പ്', '%s വര്‍ഷങ്ങള്‍ക്കുല്ല്ളില്‍']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/nb_NO.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['akkurat nå', 'om litt'],\r\n    ['%s sekunder siden', 'om %s sekunder'],\r\n    ['1 minutt siden', 'om 1 minutt'],\r\n    ['%s minutter siden', 'om %s minutter'],\r\n    ['1 time siden', 'om 1 time'],\r\n    ['%s timer siden', 'om %s timer'],\r\n    ['1 dag siden', 'om 1 dag'],\r\n    ['%s dager siden', 'om %s dager'],\r\n    ['1 uke siden', 'om 1 uke'],\r\n    ['%s uker siden', 'om %s uker'],\r\n    ['1 måned siden', 'om 1 måned'],\r\n    ['%s måneder siden', 'om %s måneder'],\r\n    ['1 år siden', 'om 1 år'],\r\n    ['%s år siden', 'om %s år']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/nl.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['recent', 'binnenkort'],\r\n    ['%s seconden geleden', 'binnen %s seconden'],\r\n    ['1 minuut geleden', 'binnen 1 minuut'],\r\n    ['%s minuten geleden', 'binnen %s minuten'],\r\n    ['1 uur geleden', 'binnen 1 uur'],\r\n    ['%s uren geleden', 'binnen %s uren'],\r\n    ['1 dag geleden', 'binnen 1 dag'],\r\n    ['%s dagen geleden', 'binnen %s dagen'],\r\n    ['1 week geleden', 'binnen 1 week'],\r\n    ['%s weken geleden', 'binnen %s weken'],\r\n    ['1 maand geleden', 'binnen 1 maand'],\r\n    ['%s maanden geleden', 'binnen %s maanden'],\r\n    ['1 jaar geleden', 'binnen 1 jaar'],\r\n    ['%s jaren geleden', 'binnen %s jaren']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/nn_NO.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['nett no', 'om litt'],\r\n    ['%s sekund sidan', 'om %s sekund'],\r\n    ['1 minutt sidan', 'om 1 minutt'],\r\n    ['%s minutt sidan', 'om %s minutt'],\r\n    ['1 time sidan', 'om 1 time'],\r\n    ['%s timar sidan', 'om %s timar'],\r\n    ['1 dag sidan', 'om 1 dag'],\r\n    ['%s dagar sidan', 'om %s dagar'],\r\n    ['1 veke sidan', 'om 1 veke'],\r\n    ['%s veker sidan', 'om %s veker'],\r\n    ['1 månad sidan', 'om 1 månad'],\r\n    ['%s månadar sidan', 'om %s månadar'],\r\n    ['1 år sidan', 'om 1 år'],\r\n    ['%s år sidan', 'om %s år']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/pl.js":"// 0-13 alternately: single unit of time,\r\n// genitive plural form for all other numbers excluding cases below:\r\n// 14-20: nominative plural form for the numbers 2,3,4 \r\n// and all other numbers higher than 21 which end in 2,3,4\r\nvar l = [\r\n  ['w tej chwili', 'za chwilę'],\r\n  ['%s sekund temu', 'za %s sekund'],\r\n  ['1 minutę temu', 'za 1 minutę'],\r\n  ['%s minut temu', 'za %s minut'],\r\n  ['1 godzinę temu', 'za 1 godzinę'],\r\n  ['%s godzin temu', 'za %s godzin'],\r\n  ['1 dzień temu', 'za 1 dzień'], // ['wczoraj', 'jutro'],\r\n  ['%s dni temu', 'za %s dni'],\r\n  ['1 tydzień temu', 'za 1 tydzień'],\r\n  ['%s tygodni temu', 'za %s tygodni'],\r\n  ['1 miesiąc temu', 'za 1 miesiąc'],\r\n  ['%s miesięcy temu', 'za %s miesięcy'],\r\n  ['1 rok temu', 'za 1 rok'],\r\n  ['%s lat temu', 'za %s lat'],\r\n  ['%s sekundy temu', 'za %s sekundy'],\r\n  ['%s minuty temu', 'za %s minuty'],\r\n  ['%s godziny temu', 'za %s godziny'],\r\n  ['%s dni temu', 'za %s dni'],\r\n  ['%s tygodnie temu', 'za %s tygodnie'],\r\n  ['%s miesiące temu', 'za %s miesiące'],\r\n  ['%s lata temu', 'za %s lata']\r\n];\r\n\r\nmodule.exports = function(number, index) {\r\n  // to determine which plural form must be used check the last 2 digits\r\n  // and calculate new index value to get the nominative form (14-20)\r\n  // for all other cases use index value as it is (0-13)\r\n  return l[index&1?(number%10>4||number%10<2||1===~~(number/10)%10?index:++index/2+13):index];\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/pt_BR.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['agora mesmo', 'daqui um pouco'],\r\n    ['há %s segundos', 'em %s segundos'],\r\n    ['há um minuto', 'em um minuto'],\r\n    ['há %s minutos', 'em %s minutos'],\r\n    ['há uma hora', 'em uma hora'],\r\n    ['há %s horas', 'em %s horas'],\r\n    ['há um dia', 'em um dia'],\r\n    ['há %s dias', 'em %s dias'],\r\n    ['há uma semana', 'em uma semana'],\r\n    ['há %s semanas', 'em %s semanas'],\r\n    ['há um mês', 'em um mês'],\r\n    ['há %s meses', 'em %s meses'],\r\n    ['há um ano', 'em um ano'],\r\n    ['há %s anos', 'em %s anos']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ro.js":"module.exports = function(number, index) {\r\n  var langTable = [\r\n    ['chiar acum', 'chiar acum'],\r\n    ['acum %s secunde', 'peste %s secunde'],\r\n    ['acum un minut', 'peste un minut'],\r\n    ['acum %s minute', 'peste %s minute'],\r\n    ['acum o oră', 'peste o oră'],\r\n    ['acum %s ore', 'peste %s ore'],\r\n    ['acum o zi', 'peste o zi'],\r\n    ['acum %s zile', 'peste %s zile'],\r\n    ['acum o săptămână', 'peste o săptămână'],\r\n    ['acum %s săptămâni', 'peste %s săptămâni'],\r\n    ['acum o lună', 'peste o lună'],\r\n    ['acum %s luni', 'peste %s luni'],\r\n    ['acum un an', 'peste un an'],\r\n    ['acum %s ani', 'peste %s ani']\r\n  ];\r\n\r\n  if (number < 20) {\r\n  \treturn langTable[index];\r\n  }\r\n\r\n  // A `de` preposition must be added between the number and the adverb\r\n  // if the number is greater than 20.\r\n  return [\r\n    langTable[index][0].replace('%s', '%s de'),\r\n    langTable[index][1].replace('%s', '%s de'),\r\n  ];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ru.js":"var seconds = formatNum.bind(null, 'секунду', '%s секунду', '%s секунды', '%s секунд'),\r\n  minutes = formatNum.bind(null, 'минуту', '%s минуту', '%s минуты', '%s минут'),\r\n  hours = formatNum.bind(null, 'час', '%s час', '%s часа', '%s часов'),\r\n  days = formatNum.bind(null, 'день', '%s день', '%s дня', '%s дней'),\r\n  weeks = formatNum.bind(null, 'неделю', '%s неделю', '%s недели', '%s недель'),\r\n  months = formatNum.bind(null, 'месяц', '%s месяц', '%s месяца', '%s месяцев'),\r\n  years = formatNum.bind(null, 'год', '%s год', '%s года', '%s лет');\r\n\r\nmodule.exports = function(number, index) {\r\n  switch(index) {\r\n    case 0: return ['только что', 'через несколько секунд'];\r\n    case 1: return [seconds(number) + ' назад', 'через ' + seconds(number)];\r\n    case 2: // ['минуту назад', 'через минуту'];\r\n    case 3: return [minutes(number) + ' назад', 'через ' + minutes(number)];\r\n    case 4: // ['час назад', 'через час'];\r\n    case 5: return [hours(number) + ' назад', 'через ' + hours(number)];\r\n    case 6: return ['вчера', 'завтра'];\r\n    case 7: return [days(number) + ' назад', 'через ' + days(number)];\r\n    case 8: // ['неделю назад', 'через неделю'];\r\n    case 9: return [weeks(number) + ' назад', 'через ' + weeks(number)];\r\n    case 10: // ['месяц назад', 'через месяц'];\r\n    case 11: return [months(number) + ' назад', 'через ' + months(number)];\r\n    case 12: // ['год назад', 'через год'];\r\n    case 13: return [years(number) + ' назад', 'через ' + years(number)];\r\n    default: return ['', '']\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param f1 - 1\r\n * @param f - 21, 31, ...\r\n * @param s - 2-4, 22-24, 32-34 ...\r\n * @param t - 5-20, 25-30, ...\r\n * @param n\r\n * @returns {string}\r\n */\r\nfunction formatNum(f1, f, s, t, n) {\r\n  var n10 = n % 10,\r\n    str = t;\r\n\r\n  if (n === 1) {\r\n    str = f1;\r\n  } else if (n10 === 1 && n > 20) {\r\n    str = f;\r\n  } else if (n10 > 1 && n10 < 5 && (n > 20 || n < 10)) {\r\n    str = s;\r\n  }\r\n  \r\n  return str;\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/sv.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['just nu', 'om en stund'],\r\n    ['%s sekunder sedan', 'om %s seconder'],\r\n    ['1 minut sedan', 'om 1 minut'],\r\n    ['%s minuter sedan', 'om %s minuter'],\r\n    ['1 timme sedan', 'om 1 timme'],\r\n    ['%s timmar sedan', 'om %s timmar'],\r\n    ['1 dag sedan', 'om 1 dag'],\r\n    ['%s dagar sedan', 'om %s dagar'],\r\n    ['1 vecka sedan', 'om 1 vecka'],\r\n    ['%s veckor sedan', 'om %s veckor'],\r\n    ['1 månad sedan', 'om 1 månad'],\r\n    ['%s månader sedan', 'om %s månader'],\r\n    ['1 år sedan', 'om 1 år'],\r\n    ['%s år sedan', 'om %s år']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/ta.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['இப்போது', 'சற்று நேரம் முன்பு'],\r\n    ['%s நொடிக்கு முன்', '%s நொடிகளில்'],\r\n    ['1 நிமிடத்திற்க்கு முன்', '1 நிமிடத்தில்'],\r\n    ['%s நிமிடத்திற்க்கு முன்', '%s நிமிடங்களில்'],\r\n    ['1 மணி நேரத்திற்கு முன்', '1 மணி நேரத்திற்குள்'],\r\n    ['%s மணி நேரத்திற்கு முன்', '%s மணி நேரத்திற்குள்'],\r\n    ['1 நாளுக்கு முன்', '1 நாளில்'],\r\n    ['%s நாட்களுக்கு முன்', '%s நாட்களில்'],\r\n    ['1 வாரத்திற்கு முன்', '1 வாரத்தில்'],\r\n    ['%s வாரங்களுக்கு முன்', '%s வாரங்களில்'],\r\n    ['1 மாதத்திற்கு முன்', '1 மாதத்தில்'],\r\n    ['%s மாதங்களுக்கு முன்', '%s மாதங்களில்'],\r\n    ['1 வருடத்திற்கு முன்', '1 வருடத்தில்'],\r\n    ['%s வருடங்களுக்கு முன்', '%s வருடங்களில்']\r\n  ][index];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/th.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['เมื่อสักครู่นี้', 'อีกสักครู่'],\r\n    ['%s วินาทีที่แล้ว', 'ใน %s วินาที'],\r\n    ['1 นาทีที่แล้ว', 'ใน 1 นาที'],\r\n    ['%s นาทีที่แล้ว', 'ใน %s นาที'],\r\n    ['1 ชั่วโมงที่แล้ว', 'ใน 1 ชั่วโมง'],\r\n    ['%s ชั่วโมงที่แล้ว', 'ใน %s ชั่วโมง'],\r\n    ['1 วันที่แล้ว', 'ใน 1 วัน'],\r\n    ['%s วันที่แล้ว', 'ใน %s วัน'],\r\n    ['1 อาทิตย์ที่แล้ว', 'ใน 1 อาทิตย์'],\r\n    ['%s อาทิตย์ที่แล้ว', 'ใน %s อาทิตย์'],\r\n    ['1 เดือนที่แล้ว', 'ใน 1 เดือน'],\r\n    ['%s เดือนที่แล้ว', 'ใน %s เดือน'],\r\n    ['1 ปีที่แล้ว', 'ใน 1 ปี'],\r\n    ['%s ปีที่แล้ว', 'ใน %s ปี']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/tr.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['az önce', 'şimdi'],\r\n    ['%s saniye önce', '%s saniye içinde'],\r\n    ['1 dakika önce', '1 dakika içinde'],\r\n    ['%s dakika önce', '%s dakika içinde'],\r\n    ['1 saat önce', '1 saat içinde'],\r\n    ['%s saat önce', '%s saat içinde'],\r\n    ['1 gün önce', '1 gün içinde'],\r\n    ['%s gün önce', '%s gün içinde'],\r\n    ['1 hafta önce', '1 hafta içinde'],\r\n    ['%s hafta önce', '%s hafta içinde'],\r\n    ['1 ay önce', '1 ay içinde'],\r\n    ['%s ay önce', '%s ay içinde'],\r\n    ['1 yıl önce', '1 yıl içinde'],\r\n    ['%s yıl önce', '%s yıl içinde']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/uk.js":"var seconds = formatNum.bind(null, 'секунду', '%s секунду', '%s секунди', '%s секунд'),\r\n  minutes = formatNum.bind(null, 'хвилину', '%s хвилину', '%s хвилини', '%s хвилин'),\r\n  hours = formatNum.bind(null, 'годину', '%s годину', '%s години', '%s годин'),\r\n  days = formatNum.bind(null, 'день', '%s день', '%s дні', '%s днів'),\r\n  weeks = formatNum.bind(null, 'тиждень', '%s тиждень', '%s тиждні', '%s тижднів'),\r\n  months = formatNum.bind(null, 'місяць', '%s місяць', '%s місяці', '%s місяців'),\r\n  years = formatNum.bind(null, 'рік', '%s рік', '%s роки', '%s років')\r\n\r\nmodule.exports = function (number, index) {\r\n  switch (index) {\r\n    case 0: return ['щойно', 'через декілька секунд']\r\n    case 1: return [seconds(number) + ' тому', 'через ' + seconds(number)]\r\n    case 2:\r\n    case 3: return [minutes(number) + ' тому', 'через ' + minutes(number)]\r\n    case 4:\r\n    case 5: return [hours(number) + ' тому', 'через ' + hours(number)]\r\n    case 6:\r\n    case 7: return [days(number) + ' тому', 'через ' + days(number)]\r\n    case 8:\r\n    case 9: return [weeks(number) + ' тому', 'через ' + weeks(number)]\r\n    case 10:\r\n    case 11: return [months(number) + ' тому', 'через ' + months(number)]\r\n    case 12:\r\n    case 13: return [years(number) + ' тому', 'через ' + years(number)]\r\n    default: return ['', '']\r\n  }\r\n}\r\n\r\nfunction formatNum(f1, f, s, t, n) {\r\n  var n10 = n % 10,\r\n      str = t\r\n\r\n  if (n === 1) {\r\n    str = f1\r\n  } else if (n10 === 1 && n > 20) {\r\n    str = f\r\n  } else if (n10 > 1 && n10 < 5 && (n > 20 || n < 10)) {\r\n    str = s\r\n  }\r\n  return str\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/vi.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['vừa xong', 'một lúc'],\r\n    ['%s giây trước', 'trong %s giây'],\r\n    ['1 phút trước', 'trong 1 phút'],\r\n    ['%s phút trước', 'trong %s phút'],\r\n    ['1 giờ trước', 'trong 1 giờ'],\r\n    ['%s giờ trước', 'trong %s giờ'],\r\n    ['1 ngày trước', 'trong 1 ngày'],\r\n    ['%s ngày trước', 'trong %s ngày'],\r\n    ['1 tuần trước', 'trong 1 tuần'],\r\n    ['%s tuần trước', 'trong %s tuần'],\r\n    ['1 tháng trước', 'trong 1 tháng'],\r\n    ['%s tháng trước', 'trong %s tháng'],\r\n    ['1 năm trước', 'trong 1 năm'],\r\n    ['%s năm trước', 'trong %s năm']\r\n  ][index];\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/zh_CN.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['刚刚', '片刻后'],\r\n    ['%s秒前', '%s秒后'],\r\n    ['1分钟前', '1分钟后'],\r\n    ['%s分钟前', '%s分钟后'],\r\n    ['1小时前', '1小时后'],\r\n    ['%s小时前', '%s小时后'],\r\n    ['1天前', '1天后'],\r\n    ['%s天前', '%s天后'],\r\n    ['1周前', '1周后'],\r\n    ['%s周前', '%s周后'],\r\n    ['1月前', '1月后'],\r\n    ['%s月前', '%s月后'],\r\n    ['1年前', '1年后'],\r\n    ['%s年前', '%s年后']\r\n  ][index];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/locales/zh_TW.js":"module.exports = function(number, index) {\r\n  return [\r\n    ['剛剛', '片刻後'],\r\n    ['%s秒前', '%s秒後'],\r\n    ['1分鐘前', '1分鐘後'],\r\n    ['%s分鐘前', '%s分鐘後'],\r\n    ['1小時前', '1小時後'],\r\n    ['%s小時前', '%s小時後'],\r\n    ['1天前', '1天後'],\r\n    ['%s天前', '%s天後'],\r\n    ['1周前', '1周後'],\r\n    ['%s周前', '%s周後'],\r\n    ['1月前', '1月後'],\r\n    ['%s月前', '%s月後'],\r\n    ['1年前', '1年後'],\r\n    ['%s年前', '%s年後']\r\n  ][index];\r\n}","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/src/timeago.js":"/**\r\n * Copyright (c) 2016 hustcc\r\n * License: MIT\r\n * Version: %%GULP_INJECT_VERSION%%\r\n * https://github.com/hustcc/timeago.js\r\n**/\r\n/* jshint expr: true */\r\n!function (root, factory) {\r\n  if (typeof module === 'object' && module.exports) {\r\n    module.exports = factory(root); // nodejs support\r\n    module.exports['default'] = module.exports; // es6 support\r\n  }\r\n  else\r\n    root.timeago = factory(root);\r\n}(typeof window !== 'undefined' ? window : this,\r\nfunction () {\r\n  var indexMapEn = 'second_minute_hour_day_week_month_year'.split('_'),\r\n    indexMapZh = '秒_分钟_小时_天_周_月_年'.split('_'),\r\n    // build-in locales: en & zh_CN\r\n    locales = {\r\n      'en': function(number, index) {\r\n        if (index === 0) return ['just now', 'right now'];\r\n        var unit = indexMapEn[parseInt(index / 2)];\r\n        if (number > 1) unit += 's';\r\n        return [number + ' ' + unit + ' ago', 'in ' + number + ' ' + unit];\r\n      },\r\n      'zh_CN': function(number, index) {\r\n        if (index === 0) return ['刚刚', '片刻后'];\r\n        var unit = indexMapZh[parseInt(index / 2)];\r\n        return [number + unit + '前', number + unit + '后'];\r\n      }\r\n    },\r\n    // second, minute, hour, day, week, month, year(365 days)\r\n    SEC_ARRAY = [60, 60, 24, 7, 365/7/12, 12],\r\n    SEC_ARRAY_LEN = 6,\r\n    ATTR_DATETIME = 'datetime',\r\n    ATTR_DATA_TID = 'data-tid',\r\n    timers = {}; // real-time render timers\r\n\r\n  // format Date / string / timestamp to Date instance.\r\n  function toDate(input) {\r\n    if (input instanceof Date) return input;\r\n    if (!isNaN(input)) return new Date(toInt(input));\r\n    if (/^\\d+$/.test(input)) return new Date(toInt(input));\r\n    input = (input || '').trim().replace(/\\.\\d+/, '') // remove milliseconds\r\n      .replace(/-/, '/').replace(/-/, '/')\r\n      .replace(/(\\d)T(\\d)/, '$1 $2').replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\r\n      .replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\r\n    return new Date(input);\r\n  }\r\n  // change f into int, remove decimal. Just for code compression\r\n  function toInt(f) {\r\n    return parseInt(f);\r\n  }\r\n  // format the diff second to *** time ago, with setting locale\r\n  function formatDiff(diff, locale, defaultLocale) {\r\n    // if locale is not exist, use defaultLocale.\r\n    // if defaultLocale is not exist, use build-in `en`.\r\n    // be sure of no error when locale is not exist.\r\n    locale = locales[locale] ? locale : (locales[defaultLocale] ? defaultLocale : 'en');\r\n    // if (! locales[locale]) locale = defaultLocale;\r\n    var i = 0,\r\n      agoin = diff < 0 ? 1 : 0, // timein or timeago\r\n      total_sec = diff = Math.abs(diff);\r\n\r\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY_LEN; i++) {\r\n      diff /= SEC_ARRAY[i];\r\n    }\r\n    diff = toInt(diff);\r\n    i *= 2;\r\n\r\n    if (diff > (i === 0 ? 9 : 1)) i += 1;\r\n    return locales[locale](diff, i, total_sec)[agoin].replace('%s', diff);\r\n  }\r\n  // calculate the diff second between date to be formated an now date.\r\n  function diffSec(date, nowDate) {\r\n    nowDate = nowDate ? toDate(nowDate) : new Date();\r\n    return (nowDate - toDate(date)) / 1000;\r\n  }\r\n  /**\r\n   * nextInterval: calculate the next interval time.\r\n   * - diff: the diff sec between now and date to be formated.\r\n   *\r\n   * What's the meaning?\r\n   * diff = 61 then return 59\r\n   * diff = 3601 (an hour + 1 second), then return 3599\r\n   * make the interval with high performace.\r\n  **/\r\n  function nextInterval(diff) {\r\n    var rst = 1, i = 0, d = Math.abs(diff);\r\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY_LEN; i++) {\r\n      diff /= SEC_ARRAY[i];\r\n      rst *= SEC_ARRAY[i];\r\n    }\r\n    // return leftSec(d, rst);\r\n    d = d % rst;\r\n    d = d ? rst - d : rst;\r\n    return Math.ceil(d);\r\n  }\r\n  // get the datetime attribute, jQuery and DOM\r\n  function getDateAttr(node) {\r\n    if(node.dataset.timeago) return node.dataset.timeago; // data-timeago supported\r\n    return getAttr(node, ATTR_DATETIME);\r\n  }\r\n  function getAttr(node, name) {\r\n    if(node.getAttribute) return node.getAttribute(name); // native\r\n    if(node.attr) return node.attr(name); // jquery\r\n  }\r\n  function setTidAttr(node, val) {\r\n    if(node.setAttribute) return node.setAttribute(ATTR_DATA_TID, val); // native\r\n    if(node.attr) return node.attr(ATTR_DATA_TID, val); // jquery\r\n  }\r\n  function getTidFromNode(node) {\r\n    return getAttr(node, ATTR_DATA_TID);\r\n  }\r\n  /**\r\n   * timeago: the function to get `timeago` instance.\r\n   * - nowDate: the relative date, default is new Date().\r\n   * - defaultLocale: the default locale, default is en. if your set it, then the `locale` parameter of format is not needed of you.\r\n   *\r\n   * How to use it?\r\n   * var timeagoLib = require('timeago.js');\r\n   * var timeago = timeagoLib(); // all use default.\r\n   * var timeago = timeagoLib('2016-09-10'); // the relative date is 2016-09-10, so the 2016-09-11 will be 1 day ago.\r\n   * var timeago = timeagoLib(null, 'zh_CN'); // set default locale is `zh_CN`.\r\n   * var timeago = timeagoLib('2016-09-10', 'zh_CN'); // the relative date is 2016-09-10, and locale is zh_CN, so the 2016-09-11 will be 1天前.\r\n  **/\r\n  function Timeago(nowDate, defaultLocale) {\r\n    this.nowDate = nowDate;\r\n    // if do not set the defaultLocale, set it with `en`\r\n    this.defaultLocale = defaultLocale || 'en'; // use default build-in locale\r\n    // for dev test\r\n    // this.nextInterval = nextInterval;\r\n  }\r\n  // what the timer will do\r\n  Timeago.prototype.doRender = function(node, date, locale) {\r\n    var diff = diffSec(date, this.nowDate),\r\n      self = this,\r\n      tid;\r\n    // delete previously assigned timeout's id to node\r\n    node.innerHTML = formatDiff(diff, locale, this.defaultLocale);\r\n    // waiting %s seconds, do the next render\r\n    timers[tid = setTimeout(function() {\r\n      self.doRender(node, date, locale);\r\n      delete timers[tid];\r\n    }, Math.min(nextInterval(diff) * 1000, 0x7FFFFFFF))] = 0; // there is no need to save node in object.\r\n    // set attribute date-tid\r\n    setTidAttr(node, tid);\r\n  };\r\n  /**\r\n   * format: format the date to *** time ago, with setting or default locale\r\n   * - date: the date / string / timestamp to be formated\r\n   * - locale: the formated string's locale name, e.g. en / zh_CN\r\n   *\r\n   * How to use it?\r\n   * var timeago = require('timeago.js')();\r\n   * timeago.format(new Date(), 'pl'); // Date instance\r\n   * timeago.format('2016-09-10', 'fr'); // formated date string\r\n   * timeago.format(1473473400269); // timestamp with ms\r\n  **/\r\n  Timeago.prototype.format = function(date, locale) {\r\n    return formatDiff(diffSec(date, this.nowDate), locale, this.defaultLocale);\r\n  };\r\n  /**\r\n   * render: render the DOM real-time.\r\n   * - nodes: which nodes will be rendered.\r\n   * - locale: the locale name used to format date.\r\n   *\r\n   * How to use it?\r\n   * var timeago = require('timeago.js')();\r\n   * // 1. javascript selector\r\n   * timeago.render(document.querySelectorAll('.need_to_be_rendered'));\r\n   * // 2. use jQuery selector\r\n   * timeago.render($('.need_to_be_rendered'), 'pl');\r\n   *\r\n   * Notice: please be sure the dom has attribute `datetime`.\r\n  **/\r\n  Timeago.prototype.render = function(nodes, locale) {\r\n    if (nodes.length === undefined) nodes = [nodes];\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n      this.doRender(nodes[i], getDateAttr(nodes[i]), locale); // render item\r\n    }\r\n  };\r\n  /**\r\n   * setLocale: set the default locale name.\r\n   *\r\n   * How to use it?\r\n   * var timeago = require('timeago.js')();\r\n   * timeago.setLocale('fr');\r\n  **/\r\n  Timeago.prototype.setLocale = function(locale) {\r\n    this.defaultLocale = locale;\r\n  };\r\n  /**\r\n   * timeago: the function to get `timeago` instance.\r\n   * - nowDate: the relative date, default is new Date().\r\n   * - defaultLocale: the default locale, default is en. if your set it, then the `locale` parameter of format is not needed of you.\r\n   *\r\n   * How to use it?\r\n   * var timeagoFactory = require('timeago.js');\r\n   * var timeago = timeagoFactory(); // all use default.\r\n   * var timeago = timeagoFactory('2016-09-10'); // the relative date is 2016-09-10, so the 2016-09-11 will be 1 day ago.\r\n   * var timeago = timeagoFactory(null, 'zh_CN'); // set default locale is `zh_CN`.\r\n   * var timeago = timeagoFactory('2016-09-10', 'zh_CN'); // the relative date is 2016-09-10, and locale is zh_CN, so the 2016-09-11 will be 1天前.\r\n   **/\r\n  function timeagoFactory(nowDate, defaultLocale) {\r\n    return new Timeago(nowDate, defaultLocale);\r\n  }\r\n  /**\r\n   * register: register a new language locale\r\n   * - locale: locale name, e.g. en / zh_CN, notice the standard.\r\n   * - localeFunc: the locale process function\r\n   *\r\n   * How to use it?\r\n   * var timeagoFactory = require('timeago.js');\r\n   *\r\n   * timeagoFactory.register('the locale name', the_locale_func);\r\n   * // or\r\n   * timeagoFactory.register('pl', require('timeago.js/locales/pl'));\r\n   **/\r\n  timeagoFactory.register = function(locale, localeFunc) {\r\n    locales[locale] = localeFunc;\r\n  };\r\n\r\n  /**\r\n   * cancel: cancels one or all the timers which are doing real-time render.\r\n   *\r\n   * How to use it?\r\n   * For canceling all the timers:\r\n   * var timeagoFactory = require('timeago.js');\r\n   * var timeago = timeagoFactory();\r\n   * timeago.render(document.querySelectorAll('.need_to_be_rendered'));\r\n   * timeagoFactory.cancel(); // will stop all the timers, stop render in real time.\r\n   *\r\n   * For canceling single timer on specific node:\r\n   * var timeagoFactory = require('timeago.js');\r\n   * var timeago = timeagoFactory();\r\n   * var nodes = document.querySelectorAll('.need_to_be_rendered');\r\n   * timeago.render(nodes);\r\n   * timeagoFactory.cancel(nodes[0]); // will clear a timer attached to the first node, stop render in real time.\r\n   **/\r\n  timeagoFactory.cancel = function(node) {\r\n    var tid;\r\n    // assigning in if statement to save space\r\n    if (node) {\r\n      tid = getTidFromNode(node);\r\n      if (tid) {\r\n        clearTimeout(tid);\r\n        delete timers[tid];\r\n      }\r\n    } else {\r\n      for (tid in timers) clearTimeout(tid);\r\n      timers = {};\r\n    }\r\n  };\r\n\r\n  return timeagoFactory;\r\n});\r\n","/home/travis/build/npmtest/node-npmtest-timeago.js/node_modules/timeago.js/src/timeago.locales.js":"/**\r\n * Copyright (c) 2016 hustcc\r\n * License: MIT\r\n * https://github.com/hustcc/timeago.js\r\n**/\r\nvar allLocales = require('../locales/locales.js');\r\nvar locale = null;\r\nfor (var i = allLocales.length - 1; i >= 0; i--) {\r\n  locale = allLocales[i];\r\n  if (locale != 'en' && locale != 'zh_CN')\r\n    timeago.register(locale, require('../locales/' + locale));\r\n};\r\n"}